package third_practise;

public class Third_practise {

	public static void main(String[] args) {
		// TODO 自動生成されたメソッド・スタブ
//		【問1】 基本問題
//		1から10までの整数の合計を計算し、その結果を表示するプログラムをforループを使用して作成してください
		int sumResult = 0;
		for( int i = 1 ; i <=10 ; i ++ ) {
			sumResult += i;
		}
		System.out.println(sumResult);		
		
//
//		【問2】九九
//		九九を表示するプログラムを作成してください
		for( int i = 1 ; i <= 9 ; i ++) {
			for( int j = 1 ; j <= 9 ; j ++){
				System.out.println( i * j );
			}
		};
//
//		【問3】階段
//		添付されている「階段」を出力するようなプログラムを作成してください
//		k が　5　になるまで処理を行う
		for (int k = 1; k <= 5; k++) {
//			l　は　k の数を超えることはない
				for(int l = 1 ; l <= k ; l ++) {
//					System.out.print()で改行せずに*を表示する
//					k=1のとき、lは1を越えられず、1回だけ*を表示する
//					k-2のとき、lは2を越えられず、2回だけ*を表示する
//					ただし、このままでは、すべて改行されないため、１行に出力される
					System.out.print("*");
				}
//				空のSystem.out.println();を実行することで、１回ごとに改行される
				System.out.println();
		};
		
//		【問4】ピラミッド
//		添付されている「ピラミッド」を出力するようなプログラムを作成してください
//		初段を０階層として、全部で４階層までの５段階
//		そのため、最大の階層levelを4とする
		int levels = 4;
//		最大階層に達するまで処理を実行する
		for ( int m = 0 ; m <= levels ; m++) {
				//”　”の数をnとすると、”　”を追加する処理をn回実行すれば良い
				//初段では”　”が４つあり、１層下がるごとに”　”は１つ減っていく
				//最下層４段目(←５段階目)では、nは０個になっている
				//つまり、nの数は、levels(0〜4階層までの5段階) - m(0を１段階と数えたときに今いる段階)　-1となる
				for( int n = 0 ; n <= levels - m - 1 ; n++) {
					System.out.print(" ");
				}
			
				//”*”の数をoとすると、”*”を追加する処理をo回実行すれば良い
				//初段では”*”が1つあり、１層下がるごとに”*”は2つ増加していく
				//最下層４段目(←５段階目)では、nは9個になっている
				//つまり、nの数は、m(0を１段階と数えたときに今いる段階) * 2(２個ずつ増える)　+ 1(初段分)となる
				for( int o = 0 ; o < 2 * m + 1 ; o ++) {
					System.out.print("*");
				}
				System.out.println();
			}
	}
}